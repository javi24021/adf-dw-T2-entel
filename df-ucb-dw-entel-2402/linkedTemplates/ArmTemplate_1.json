{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "df-ucb-dw-entel-2402"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_gold_dim_fecha')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "FechaLlamada"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_silver_datos",
								"type": "DatasetReference"
							},
							"name": "FechaInicio"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_silver_datos",
								"type": "DatasetReference"
							},
							"name": "FechaFin"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_gold_dim_fecha",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "union2"
						},
						{
							"name": "sort1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fecha as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT fecha FROM silver.llamadas',",
						"     format: 'query') ~> FechaLlamada",
						"source(output(",
						"          fecha as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT fecha_inicio as fecha FROM silver.datos',",
						"     format: 'query') ~> FechaInicio",
						"source(output(",
						"          fecha as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT fecha_fin as fecha FROM silver.datos',",
						"     format: 'query') ~> FechaFin",
						"FechaLlamada, FechaInicio union(byName: true)~> union1",
						"union1, FechaFin union(byName: true)~> union2",
						"union2 sort(asc(fecha, true)) ~> sort1",
						"sort1 filter(!isNull(fecha)) ~> filter1",
						"filter1 aggregate(groupBy(fecha),",
						"     each(match(name!='fecha'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as integer,",
						"          fecha as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_gold_dim_numero')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_datos",
								"type": "DatasetReference"
							},
							"name": "numeroDatos"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "numeroA"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "numeroB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_gold_dim_numero",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "union2"
						},
						{
							"name": "sort1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT numero, imei FROM silver.datos',",
						"     format: 'query') ~> numeroDatos",
						"source(output(",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT numero_a as numero, imei_a as imei FROM silver.llamadas',",
						"     format: 'query') ~> numeroA",
						"source(output(",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT numero_b as numero, imei_b as imei FROM silver.llamadas',",
						"     format: 'query') ~> numeroB",
						"numeroDatos, numeroA union(byName: true)~> union1",
						"union1, numeroB union(byName: true)~> union2",
						"union2 sort(asc(numero, true)) ~> sort1",
						"sort1 aggregate(groupBy(numero),",
						"     each(match(name!='numero'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_numero as integer,",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          numero,",
						"          imei",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_gold_dim_radioBase')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_datos",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "LLB"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "LLA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_gold_dim_radiobase",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "union2"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          radiobase as string,",
						"          celda as string,",
						"          latitud as decimal(10,7),",
						"          longitud as decimal(10,7)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT \\n    rbs_utilizada as radiobase, \\n    celda, \\n    latitud, \\n    longitud \\nFROM silver.datos',",
						"     format: 'query') ~> source1",
						"source(output(",
						"          radiobase as string,",
						"          celda as string,",
						"          latitud as decimal(10,7),",
						"          longitud as decimal(10,7)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT \\n    rbs_utilizada_b as radiobase, \\n    celda_b as celda, \\n    latitud_b as latitud, \\n    longitud_b as longitud \\nFROM silver.llamadas',",
						"     format: 'query') ~> LLB",
						"source(output(",
						"          radiobase as string,",
						"          celda as string,",
						"          latitud as decimal(10,7),",
						"          longitud as decimal(10,7)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT \\n    rbs_utilizada_a as radiobase, \\n    celda_a as celda, \\n    latitud_a as latitud, \\n    longitud_a as longitud \\nFROM silver.llamadas',",
						"     format: 'query') ~> LLA",
						"source1, LLA union(byName: true)~> union1",
						"union1, LLB union(byName: true)~> union2",
						"union2 sort(asc(celda, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_radiobase as integer,",
						"          radiobase as string,",
						"          celda as string,",
						"          latitud as decimal(10,7),",
						"          longitud as decimal(10,7)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          radiobase,",
						"          celda,",
						"          latitud,",
						"          longitud",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_gold_dim_registro')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_gold_dim_registro",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          registro as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT registro FROM silver.llamadas',",
						"     format: 'query') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_registro as integer,",
						"          registro as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          registro",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_gold_dim_servicios')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_gold_dim_servicios",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          servicio as string,",
						"          registro as string,",
						"          numero_a as string,",
						"          imei_a as string,",
						"          rbs_utilizada_a as string,",
						"          celda_a as string,",
						"          latitud_a as decimal(10,7),",
						"          longitud_a as decimal(10,7),",
						"          numero_b as string,",
						"          imei_b as string,",
						"          rbs_utilizada_b as string,",
						"          celda_b as string,",
						"          latitud_b as decimal(10,7),",
						"          longitud_b as decimal(10,7),",
						"          fecha as timestamp,",
						"          duracion as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT servicio FROM silver.llamadas',",
						"     format: 'query') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_servicio as integer,",
						"          servicio as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          servicio",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_silver_datos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sql_05",
								"type": "DatasetReference"
							},
							"name": "a05"
						},
						{
							"dataset": {
								"referenceName": "ls_sql_06",
								"type": "DatasetReference"
							},
							"name": "a06"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_datos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "cast2"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fecha_inicio as string,",
						"          fecha_fin as string,",
						"          numero as string,",
						"          imei as string,",
						"          rbs_utilizada as string,",
						"          celda as string,",
						"          latitud_longitud as string,",
						"          subidos as string,",
						"          descargados as string,",
						"          total as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> a05",
						"source(output(",
						"          fecha_inicio as string,",
						"          fecha_fin as string,",
						"          numero as string,",
						"          imei as string,",
						"          rbs_utilizada as string,",
						"          celda as string,",
						"          latitud_longitud as string,",
						"          subidos as string,",
						"          descargados as string,",
						"          total as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> a06",
						"a05, a06 union(byName: true)~> union1",
						"union1 derive(Latitud = substring(latitud_longitud, 0, instr(latitud_longitud, \",-\")-1),",
						"          Longitud = substring(latitud_longitud,instr(latitud_longitud, \",-\")+1,length(latitud_longitud))) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          fecha_inicio as timestamp 'MM-dd-yyyy HH:mm:ss',",
						"          fecha_fin as timestamp 'MM-dd-yyyy HH:mm:ss',",
						"          subidos as integer,",
						"          descargados as integer,",
						"          total as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"derivedColumn2 cast(output(",
						"          Latitud as decimal(10,7),",
						"          Longitud as decimal(10,7)",
						"     ),",
						"     errors: true) ~> cast2",
						"cast1 derive(Latitud = replace(Latitud, ',', '.'),",
						"          Longitud = replace(Longitud, ',', '.')) ~> derivedColumn2",
						"cast2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          fecha_inicio as timestamp,",
						"          fecha_fin as timestamp,",
						"          numero as string,",
						"          imei as string,",
						"          rbs_utilizada as string,",
						"          celda as string,",
						"          latitud as decimal(10,7),",
						"          longitud as decimal(10,7),",
						"          subidos as integer,",
						"          descargados as integer,",
						"          total as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha_inicio,",
						"          fecha_fin,",
						"          numero,",
						"          imei,",
						"          rbs_utilizada,",
						"          celda,",
						"          latitud = Latitud,",
						"          longitud = Longitud,",
						"          subidos,",
						"          descargados,",
						"          total",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_silver_llamadas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sql_03",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ls_sql_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast2"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "cast3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          servicio as string,",
						"          registro as string,",
						"          numero_a as string,",
						"          imei_a as string,",
						"          rbs_utilizada_a as string,",
						"          celda_a as string,",
						"          latitud_longitud_a as string,",
						"          numero_b as string,",
						"          imei_b as string,",
						"          rbs_utilizada_b as string,",
						"          celda_b as string,",
						"          latitud_longitud_b as string,",
						"          fecha as string,",
						"          duracion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 cast(output(",
						"          fecha as timestamp 'dd-MM-yyyy HH:mm:ss'",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 derive(duracion = replace(duracion, '-', '00:00:00'),",
						"          latitud_longitud_a = iif(latitud_longitud_a == '-','-0.0,-0.0', latitud_longitud_a),",
						"          latitud_longitud_b = iif(latitud_longitud_b == '-','-0.0,-0.0', latitud_longitud_b)) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          duracion as timestamp 'HH:mm:ss'",
						"     ),",
						"     errors: true) ~> cast2",
						"cast2 derive(Latitud_a = substring(latitud_longitud_a, 0, instr(latitud_longitud_a, \",-\")-1),",
						"          Longitud_a = substring(latitud_longitud_a,instr(latitud_longitud_a, \",-\")+1,length(latitud_longitud_a))) ~> derivedColumn2",
						"derivedColumn2 derive(Latitud_b = substring(latitud_longitud_b, 0, instr(latitud_longitud_b, \",-\")-1),",
						"          Longitud_b = substring(latitud_longitud_b,instr(latitud_longitud_b, \",-\")+1,length(latitud_longitud_b))) ~> derivedColumn3",
						"derivedColumn3 cast(output(",
						"          Latitud_a as decimal(10,7),",
						"          Longitud_a as decimal(10,7),",
						"          Latitud_b as decimal(10,7),",
						"          Longitud_b as decimal(10,7)",
						"     ),",
						"     errors: true) ~> cast3",
						"cast3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          servicio as string,",
						"          registro as string,",
						"          numero_a as string,",
						"          imei_a as string,",
						"          rbs_utilizada_a as string,",
						"          celda_a as string,",
						"          latitud_a as decimal(10,7),",
						"          longitud_a as decimal(10,7),",
						"          numero_b as string,",
						"          imei_b as string,",
						"          rbs_utilizada_b as string,",
						"          celda_b as string,",
						"          latitud_b as decimal(10,7),",
						"          longitud_b as decimal(10,7),",
						"          fecha as timestamp,",
						"          duracion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          servicio,",
						"          registro,",
						"          numero_a,",
						"          imei_a,",
						"          rbs_utilizada_a,",
						"          celda_a,",
						"          latitud_a = Latitud_a,",
						"          longitud_a = Longitud_a,",
						"          numero_b,",
						"          imei_b,",
						"          rbs_utilizada_b,",
						"          celda_b,",
						"          latitud_b = Latitud_b,",
						"          longitud_b = Longitud_b,",
						"          fecha,",
						"          duracion",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sql_dw_entel",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DELETE from [bronze].[03]\nDELETE from [bronze].[05]\nDELETE from [bronze].[06]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "df_03",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_bronze_03",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_05",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_bronze_05",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_06",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_bronze_06",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_gold_dim_numero",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"numeroDatos": {},
									"numeroA": {},
									"numeroB": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_gold_dim_fecha",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FechaLlamada": {},
									"FechaInicio": {},
									"FechaFin": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_gold_dim_radioBase",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"LLB": {},
									"LLA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow4",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_gold_dim_registro",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow5",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_gold_dim_servicios",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_gold_dim_numero')]",
				"[concat(variables('factoryId'), '/dataflows/df_gold_dim_fecha')]",
				"[concat(variables('factoryId'), '/dataflows/df_gold_dim_radioBase')]",
				"[concat(variables('factoryId'), '/dataflows/df_gold_dim_registro')]",
				"[concat(variables('factoryId'), '/dataflows/df_gold_dim_servicios')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sql_dw_entel",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "delete from [silver].[datos]\ndelete from silver.llamadas\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_silver_datos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"a05": {},
									"a06": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_silver_llamadas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_silver_datos')]",
				"[concat(variables('factoryId'), '/dataflows/df_silver_llamadas')]"
			]
		}
	]
}